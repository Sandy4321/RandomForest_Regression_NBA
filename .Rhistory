svmfit=svm(y
~
., data=dat[train,], kernel="radial",gamma=1,
cost=1e5)
plot(svmfit,dat[train,])
tune.out=tune(svm, y
~
., data=dat[train,],
kernel="radial",
ranges=list(cost=c(0.1,1,10,100,1000),
gamma=c(0.5,1,2,3,4)))
 summary(tune.out)
table(true=dat[-train,"y"], pred=predict(tune.out$best.
model,
newx=dat[-train,]))
table(true=dat[-train,"y"], pred=predict(tune.out$best. model, newx=dat[-train,]))
table(true=dat[-train,"y"], pred=predict(tune.out$best.model, newx=dat[-train,]))
train = sample(dim(Boston)[1], dim(Boston)[1]/2)
library(MASS)
train = sample(dim(Boston)[1], dim(Boston)[1]/2)
X.train = Boston[train, -14]
X.test = Boston[-train, -14]
Y.train = Boston[train, 14]
Y.test = Boston[-train, 14]
p = dim(Boston)[2] - 1
p.2 = p/2
p.sq = sqrt(p)
rf.boston.p = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test, 
    mtry = p, ntree = 500)
rf.boston.p.2 = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test, 
    mtry = p.2, ntree = 500)
rf.boston.p.sq = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test, 
    mtry = p.sq, ntree = 500)library(randomForest)
library(randomForest)
rf.boston.p = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test, 
    mtry = p, ntree = 500)
rf.boston.p.2 = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test, 
    mtry = p.2, ntree = 500)
rf.boston.p.sq = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test, 
    mtry = p.sq, ntree = 500)plot(1:500, rf.boston.p$test$mse, col = "green", type = "l", xlab = "Number of Trees", 
    ylab = "Test MSE", ylim = c(10, 19))
rf.boston.p = randomForest(X.train, Y.train, xtest = X.test, ytest = Y.test,mtry = p, ntree = 500)
plot(1:500, rf.boston.p$test$mse, col = "green", type = "l", xlab = "Number of Trees", 
    ylab = "Test MSE", ylim = c(10, 19))
setwd("C:\Users\jerry\Desktop\NBA_position")
setwd("C:/Users/jerry/Desktop/NBA_position")
pwd()
getwd
getwd()
stats<-read.table('12-13RD.txt', header=T) 
pos = as.character(stats$PS)
pos = as.character(stats$PS)
pos[which(pos == "C" | pos == "PF" | pos == "SF")] = "F"
pos[which(pos != "F")] = "G"
pos = as.factor(pos)
d<-data.frame( stats[,6:23]/stats$Min, pos=pos ) 
rf <- randomForest(
pos ~ ., ##this is the model specification, position vs. all
data=d,
importance=TRUE, 
proximity=TRUE, 
keep.forest=TRUE)
rf$confusion
importance(rf)
varImpPlot(rf)
importance(rf)
stats<-read.table('PT-PM Half Season Scores.csv', header=T) 
stats<-read.table("PT-PM Half Season Scores.csv") 
stats<-read.csv("PT-PM Half Season Scores.csv") 
fit <- lm(WinPct ~ O-PTPM + D-PTPM + PTPM + Scoring + Passing + Off + Rim + Def + Team + Stablized , data=stats)
stats<-read.csv("PT-PM Half Season Scores.csv") 
fit <- lm(WinPct ~ O-PTPM + D-PTPM + PTPM + Scoring + Passing + Off + Rim + Def + Team + Stablized , data=stats)
fit <- lm(WinPct ~ PTPM + PTPM + PTPM + Scoring + Passing + Off + Rim + Def + Team + Stablized , data=stats)
fit <- lm(WinPct ~ PTPM + PTPM + PTPM + Scoring + Passing + OffPoss + RimProtection + DefPoss + TeamDefEffect + StablizedPTPM , data=stats)
stats<-read.csv("PT-PM Half Season Scores.csv") 
fit <- lm(WinPct ~ PTPM + PTPM + PTPM + Scoring + Passing + OffPoss + RimProtection + DefPoss + TeamDefEffect + StablizedPTPM , data=stats)
summary(fit) 
library(relaimpo)
install.packages('relaimpo')
calc.relimp(ols.sat, type = c("lmg"), rela = TRUE)
calc.relimp(stats, type = c("lmg"), rela = TRUE)
library(relaimpo)
calc.relimp(stats, type = c("lmg"), rela = TRUE)
drops <- c("PLAYER_ID","PLAYER","Team")
stats[,!(names(stats) %in% drops)]
head(stats)
stats[,!(names(stats) %in% drops)]df <- subset(df, select = -c(a,c) )
stats <- subset(stats, select = -c(PLAYER_ID,PLAYER,TEAM) )
stats <- subset(stats, select = -c(PLAYER_ID,PLAYER,Team) )
head(stats)
calc.relimp(stats, type = c("lmg"), rela = TRUE)
summary(fit)
varImpPlot(rf)
summary(fit)
library(randomForest)
set.seed(1)
formula = as.formula(Wins ~ FG + FGA + Three_Point + Three_PointA + FT + FTA +   ORB + DRB + AST + STL + BLK + TOV + PF + PTS + FG_Opp + FGA_Opp +   Three_Point_Opp + Three_PointA_Opp + FT_Opp + FTA_Opp + ORB_Opp + DRB_Opp +   AST_Opp + STL_Opp + BLK_Opp + TOV_Opp + PF_Opp + PTS_Opp + Age)
data<-read.csv("leagues_NBA_2015_advanced.csv") 
getwd()
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-data[,MP>855]
data<-data[,"MP">855]
tail(data)
data<-subset(data,"MP">855)
tail(data)
data<-subset(data,MP>855)
tail(data)
set.seed(1)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STELpct + BLKpct + TOVpct + OWS + DWS + WS + WS
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
tail(data)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STELpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=team_stats, mtry=4, ntree=10000, importance=TRUE)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
importance(rf)
varImpPlot(rf)
jpeg('rfplot.jpg')
varImpPlot(rf)
dev.off()
imp = data.frame(type=rownames(imp), importance(rf), check.names=F)
imp = data.frame(type=rownames(formula), importance(rf), check.names=F)
data<-subset(data, select= -c(Rk,Player,Pos,Team,Age,G,MP,3PAr,FTr,USGpct))
data<-data[,-Rk]
data<-data[,-Pos]
head(data)
data<-data[,-"Rk"]
data<-data[,-1]
head(data)
data<-data[,-1,-2]
head(data)
data<-data[,-(1:2)]
head(data)
data<-data[,-(2:4)]
head(data)
data<-data[,-(4:5)]
head(data)
data<-data[,-1]
data<-read.csv("leagues_NBA_2015_advanced_advanced_edit.csv") 
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
data<-subset(data,MP>855)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
dataedit<-read.csv("leagues_NBA_2015_advanced_advanced_edit.csv") 
dataedit<-subset(dataedit,MP>855)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
importance(rf)
data<-data[,-(1:4,6:8,11,12,20)]
data[-c(1:4,6:8,11,12,20)]
tail(head)
head(data)
data[,-c(1:4,6:8,11,12,20)]
head(data)
data[,-c(1:4,6:8,11,12,20):=NULL]
data[,c(1:4,6:8,11,12,20):=NULL]
data[,(1:4,6:8,11,12,20):=NULL]
data[,c("Rk","Player","Pos","Team","Age","G","MP","X3PAr","FTr","USGpct"):=NULL]
data<-subset(data,-c("Rk","Player","Pos","Team","Age","G","MP","X3PAr","FTr","USGpct"))
data<-subset(data,-c(Rk,Player,Pos,Team,Age,G,MP,X3PAr,FTr,USGpct))
data<-subset(data,select=c("Rk","Player","Pos","Team","Age","G","MP","X3PAr","FTr","USGpct"))
head(data)
tail(data)
data[1,]
tail(data)> data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
> data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
tail(data)> data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
 data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
set.seed(1)
names(data)[c(1:5)]
data[,names(data)[c(1:4,6:8,11,12,20)]]
tail(data)
head(data)
data[,names(data)[c(1,2,3,4,6,7,8,11,12,20)]]
head(data)
data<-data[,names(data)[c(1,2,3,4,6,7,8,11,12,20)]]
head(data)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
head(data)
set.seed(1)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
 rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
importance(rf)
data = data.frame(type=colnames(data), importance(rf), check.names=F)
data = data.frame(type=colnames(data), importance(rf))
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,5,6,7,8,11,12,20)]]
set.seed(1)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
importance(rf)
data = data.frame(type=colnames(data[-,WinPct]), importance(rf), check.names=F)
data = data.frame(type=colnames(data[-WinPct]), importance(rf), check.names=F)
data = data.frame(type=colnames(data[-c(1)]), importance(rf), check.names=F)
data = data.frame(type=colnames(data), importance(rf), check.names=F)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
set.seed(1)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
 rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
 importance(rf)
 data = data.frame(type=colnames(data), importance(rf), check.names=F)
data = data.frame(type=colnames(data[-c(1)]), importance(rf), check.names=F)
data$type = reorder(data$type, data$`%IncMSE`)
ggplot(data=data, aes(x=type, y=`%IncMSE`)) + geom_bar(stat='identity') + geom_hline(yintercept=abs(min(data$`%IncMSE`)), col=2, linetype='dashed') + coord_flip()
library('ggplot')
library('ggplot2')
ggplot(data=data, aes(x=type, y=`%IncMSE`)) + geom_bar(stat='identity') + geom_hline(yintercept=abs(min(data$`%IncMSE`)), col=2, linetype='dashed') + coord_flip()
 jpeg('ggplot_RF.jpg')
ggplot(data=data, aes(x=type, y=`%IncMSE`)) + geom_bar(stat='identity') + geom_hline(yintercept=abs(min(data$`%IncMSE`)), col=2, linetype='dashed') + coord_flip()
dev.off()
(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
fit<-lm(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
fit<-lm(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
head(data)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
fit<-lm(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
head(data)
stats<-read.csv("PT-PM Half Season Scores.csv") 
fit <- lm(WinPct ~ PTPM + PTPM + PTPM + Scoring + Passing + OffPoss + RimProtection + DefPoss + TeamDefEffect + StablizedPTPM , data=stats)
data<-read.csv("leagues_NBA_2015_advanced_advanced.csv") 
fit<-lm(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
summary(fit)
 calc.relimp(data, type = c("lmg"), rela = TRUE)
head(data)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
 calc.relimp(data, type = c("lmg"), rela = TRUE)
plot(fit)
layout(matrix(c(1:16),4,4))
plot(fit)
data<-read.csv("leagues_NBA_2013_14.csv") 
head(data)
data<-subset(data,MP>855)
data<-read.csv("leagues_NBA_2013_14.csv") 
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
head(data)
set.seed(1)
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
 rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
formula = as.formula(WinPct ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
 rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
 importance(rf)
data = data.frame(type=colnames(data[-c(1)]), importance(rf), check.names=F)
data$type = reorder(data$type, data$`%IncMSE`)
ggplot(data=data, aes(x=type, y=`%IncMSE`)) + geom_bar(stat='identity') + geom_hline(yintercept=abs(min(data$`%IncMSE`)), col=2, linetype='dashed') + coord_flip()
ggplot(data=data, aes(x=data$type, y=`%IncMSE`)) + geom_bar(stat='identity') + geom_hline(yintercept=abs(min(data$`%IncMSE`)), col=2, linetype='dashed') + coord_flip()
library('ggplot2')
ggplot(data=data, aes(x=data$type, y=`%IncMSE`)) + geom_bar(stat='identity') + geom_hline(yintercept=abs(min(data$`%IncMSE`)), col=2, linetype='dashed') + coord_flip()
fit<-lm(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
fit<-lm(WinPct ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
data<-read.csv("leagues_NBA_2013_14.csv") 
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
fit<-lm(WinPct ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
summary(fit)
calc.relimp(data, type = c("lmg"), rela = TRUE)
head(data)
data<-read.csv("leagues_NBA_2013_14.csv") 
data<-subset(data,MP>855)
head(data)
atlmp<-sum(data$MP[Team=="ATL"])
atlmp<-sum(data$MP[data$Team=="ATL"])
atlmp
ATL_MP<-sum(data$MP[data$Team=="ATL"])
data$WinPct[data$Team=="ATL"]=data$WinPct*data$MP/ATL_MP
data$WinPct[data$Team=="ATL"]=data$WinPct[data$Team=="ATL"]*data$MP[data$Team=="ATL"]/ATL_MP
head(data)
data<-read.csv("leagues_NBA_2013_14.csv") 
data<-subset(data,MP>855)
ATL_MP<-sum(data$MP[data$Team=="ATL"])
ATL_MP
aggregate(MP ~ Team, data = data, sum)
agg<-aggregate(MP ~ Team, data = data, sum)
agg$ATL
agg[ATL]
agg[Team=="ATL"]
names(agg)
agg$MP[Team=="ATL"]
agg$MP[agg$Team=="ATL"]
agg$MP[agg$Team=="BOS"]
head(data)
data$MP[data$Team=="ATL"]=data$MP[data$Team=="ATL"]/agg$MP[agg$Team=="ATL"]
head(data)
data$WinPct[data$Team=="ATL"]=data$WinPct[data$Team=="ATL"]*data$MP[agg$Team=="ATL"]
data$WinPct[data$Team=="ATL"]=data$WinPct[data$Team=="ATL"]*data$MP[data$Team=="ATL"]
head(data)
data<-read.csv("leagues_NBA_2013_14.csv") 
head(data)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
data <- merge(x=data, y=cumMP.df, by = "Team")
dat$newvar <- with(dat, Win * (MP/cumsums))
data$WinPctMP <- with(data, WinPct * (MP/cumMP))
head(data)
data<-subset(data,MP>855)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
data <- merge(x=data, y=cumMP.df, by = "Team")
data$WinPctMP <- with(data, WinPct * (MP/cumMP))
head(data)
data<-read.csv("leagues_NBA_2013_14.csv") 
data<-subset(data,MP>855)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
data <- merge(x=data, y=cumMP.df, by = "Team")
data$WinPctMP <- with(data, WinPct * (MP/cumMP))
head(data)
tail(data)
data<-read.csv("leagues_NBA_2013_14.csv") 
> data<-subset(data,MP>855)
data<-subset(data,MP>855)
data<-data[,names(data)[-c(1,2,3,4,6,7,8,11,12,20)]]
 cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
data<-read.csv("leagues_NBA_2013_14.csv") 
data<-subset(data,MP>855)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
 data <- merge(x=data, y=cumMP.df, by = "Team")
 data$WinPctMP <- with(data, WinPct * (MP/cumMP))'
 data$WinPctMP <- with(data, WinPct * (MP/cumMP))
formula = as.formula(WinPct ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
formula = as.formula(WinPctMP ~ PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
formula = as.formula(WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
importance(rf)
data = data.frame(type=colnames(data), importance(rf), check.names=F)
head(data)
fit<-lm(WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
summary(fit)
> calc.relimp(data, type = c("lmg"), rela = TRUE)
 calc.relimp(data, type = c("lmg"), rela = TRUE)
 data<-data[,names(data)[-c(1,2,3,4,5,6,7,8,11,12,20,29)]]
 calc.relimp(data, type = c("lmg"), rela = TRUE)
head(data)
 calc.relimp(fit, type = c("lmg"), rela = TRUE)
data<-read.csv("leagues_NBA_2013_14_per_game_edited.csv") 
data<-subset(data,MP>855)
data<-subset(data,Pos=="PG" | "SG")
data<-subset(data,Pos=="PG" || "SG")
data<-subset(data,Pos=="PG" || Pos=="SG")
head(data)
tail(data)
data<-read.csv("leagues_NBA_2013_14_per_game_edited.csv") 
head(data)
data<-subset(data,MP>855)
head(data)
data<-subset(data,Pos=="PG" | Pos=="SG")
head(data)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
 cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
 data <- merge(x=data, y=cumMP.df, by = "Team")
 data$WinPctMP <- with(data, WinPct * (MP/cumMP))
head(data)
data<-read.csv("leagues_NBA_2013_14_per_game_edited.csv") 
data<-subset(data,MP>855)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
 cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
 data <- merge(x=data, y=cumMP.df, by = "Team")
 data$WinPctMP <- with(data, WinPct * (MP/cumMP))
 data<-subset(data,Pos=="PG" | Pos=="SG")
head(data)
data<-read.csv("leagues_NBA_2013_14_per_game_edited.csv") 
 data<-subset(data,Pos=="PG" | Pos=="SG")
data<-read.csv("leagues_NBA_2013_14_per_game_edited.csv") 
data<-subset(data,MP>855)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
 cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
 data <- merge(x=data, y=cumMP.df, by = "Team")
 data$WinPctMP <- with(data, WinPct * (MP/cumMP))
 data<-subset(data,Pos=="PG" | Pos=="SG")
head(data)
set.seed(1)
formula = as.formula(WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP + PTS + X3PA + X3P + FTA)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
importance(rf)
head(data)
data<-data[,names(data)[-c(1,2,3,4,5,6,7,8,9,10,35)]]
fit<-lm(WinPctMP ~ WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP + PTS + X3PA + X3P + FTA, data=data)
fit<-lm(WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP + PTS + X3PA + X3P + FTA, data=data)
summary(fit)
calc.relimp(fit, type = c("lmg"), rela = TRUE)
q()
fit<-lm(WinPctMP ~ WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP + PTS + X3PA + X3P + FTA, data=data)
head(data)
data<-data[,names(data)[-c(7,8,9)]]
head(data)
fit<-lm(WinPctMP ~ WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP + PTS + X3PA + X3P + FTA, data=data)
fit<-lm(WinPctMP ~ PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP + PTS + X3PA + X3P + FTA, data=data)
summary(fit)
calc.relimp(fit, type = c("lmg"), rela = TRUE)
data<-read.csv("leagues_NBA_2014_15_WS_VORPvsPTPM.csv") 
data<-read.csv("leagues_NBA_2014_15__WS_VORPvsPTPM.csv") 
data<-subset(data,MP>855)
numrows(data)
nrow(data)
data <- data[!(is.na(data$OPTPM)
)]
data <- data[!(is.na(data$OPTPM))]
head(data)
data[300,]
head(data)
data[300,2]
data[q,2]
data[1,2]
data<-subset(data,MP>855)
data[1,2]
data[300,2]
data[150,2]
data[170,2]
data[177,2]
data[174,2]
data <- data[!(is.na(data$OPTPM))]
data <- subset(data,!(is.na(data$OPTPM)))
data[174,2]
numrows(data)
nrows(data)
nrow(data)
cumMP <- by(data = data$MP, INDICES = data$Team, FUN = sum)
 cumMP.df <- data.frame(Team = names(cumMP), cumMP = as.numeric(cumMP))
 data <- merge(x=data, y=cumMP.df, by = "Team")
 data$WinPctMP <- with(data, WinPct * (MP/cumMP))
head(data)
  formula = as.formula(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + TSpct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
  formula = as.formula(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Tspct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
  formula = as.formula(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
rf = randomForest(formula, data=data, mtry=4, ntree=10000, importance=TRUE)
 importance(rf)
fit<-lm(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
summary(fit)
calc.relimp(fit, type = c("lmg"), rela = TRUE)
fit<-lm(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct +ct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
fit<-lm(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
calc.relimp(fit, type = c("lmg"), rela = TRUE)
calc.relimp(fit, type = c("lmg"), rela = TRUE)
summary(fit)
tail(data)
  formula = as.formula(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + STLpct + BLKpct + TOVpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP)
  formula = as.formula(WinPctMP ~ OPTPM + DPTPM +PTPM + OWS + DWS + WS + WSp48 + VORP)
rf = randomForest(formula, data=data, mtry=3, ntree=5000, importance=TRUE)
importance(rf)
fit<-lm(WinPctMP ~ OPTPM + DPTPM +PTPM + PER + Ts_pct + ORBpct + DRBpct + TRBpct + ASTpct + OWS + DWS + WS + WSp48 + OBPM + DBPM + BPM + VORP, data=data)
fit<-lm(WinPctMP ~ OPTPM + DPTPM +PTPM + OWS + DWS + WS + WSp48 + VORP, data=data)
summary(fit)
calc.relimp(fit, type = c("lmg"), rela = TRUE)
head(data)
data<-data[,names(data)[-c(1,2,4,5,6,7,8,32)]]
head(data)
data<-data[,c(1,25,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24)]
head(data)
data.m<-melt(data)
library(ggplot2)
data.m<-melt(data)
data_matrix<-data.matrix(data)
data_heatmap<-heatmap(data_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
install.packages('gplot')
install.packages('gplots')
data_heatmap<-heatmap(data_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
library(gplots)
data_heatmap<-heatmap(data_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
library(Heatplus)
install.packages('Heatplus')
library(Heatplus)
install.packages("reshape");
library(reshape)
data.m<-melt(data)
data.m<-ddply(data.m, .(variable), transform, +     rescale = rescale(value))
data.m<-ddply(data.m, .(variable), transform,   rescale = rescale(value))
install.packages("plyr");
library(plyr);
install.packages("plyr",dependencies=TRUE);
library(plyr);
update.packages(checkBuilt=TRUE)
y
library(plyr);
install.packages("plyr");
library(plyr);
options("repos")[[1]][1]
options(repos="http://cran.revolutionanalytics.com" )
library(plyr);
install.packages("plyr")
library(plyr);
options("repos")[[1]][1]
install.packages('plyr', repos='http://cran.rstudio.com/')
library(plyr);
library(plyr);installed.packages()["plyr",]
.libPaths()
library(plyr);installed.packages()["plyr",]
q()
